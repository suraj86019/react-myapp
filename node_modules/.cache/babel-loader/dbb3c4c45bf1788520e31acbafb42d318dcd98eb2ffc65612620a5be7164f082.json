{"ast":null,"code":"var _jsxFileName = \"E:\\\\chaabi project\\\\chaabi assignment\\\\my-app\\\\src\\\\Components\\\\Compare.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst plainText = [\"aada aa aa aa\", \"sds sklj;s ss ss\", \"dd dd dd dd\", \"ll ll ll ll\", \"asdf l;l;\", \"ls dj al dl\", \"as as as as\", \"dss dss dss fdss\", \"df df df df\", \"ff f;f jfjf ff\", \"gg gg gg gg\", \"asdj ;lgf\", \"sdja hl;g\", \"djsa lg;h\", \"hh hsdah hh hh\", \"jj jj jj jj\", \"kkkk gghkk kk\", \"gh gh gh gh\", \"jk jk jk jk\", \"l; l; l; l;\", \"sa df gj lk\", \"dj aasdfl sk ;l\", \"as df gj kl\", \"sd jg la ;k\", \"djsa fghl\", \"sadj hgfl\", \"jdassdl;gh\", \"adsjjhj ;flg\", \"sjaddssglh;\", \"js;lhg\", \"das das das das\", \"jala alala lalala\"];\nconst Compare = () => {\n  _s();\n  const presentText = useSelector(store => store.AppReducer.presentText);\n  const [inputtypes, setInputtypes] = useState(\"\");\n  const [presenttchar, setPresenttchar] = useState(presentText[0]);\n  const [runt, setRunt] = useState(null);\n  const [all, setAll] = useState(1);\n  const [gltchars, setGltchars] = useState(0);\n  const [curc, setCurc] = useState({});\n  const [seconds, setSeconds] = useState(0);\n  const [times, setTimes] = useState(null);\n  const [allchar, setAllchar] = useState(0);\n  const [gltchar, setGltchar] = useState(0);\n  const [level, setLevel] = useState(\"plainText\");\n  const dispatch = useDispatch();\n  if (seconds % 300 === 0 && seconds !== 0 && times) {\n    clearInterval(times);\n    setSeconds(0);\n    console.log(\"ll\");\n    const match = (Date.now() - runt) / 1000;\n    const WPM = Math.round(allchar / 5 / (match / 60));\n    const NumWPM = Math.round((allchar - gltchar) / 5 / (match / 60));\n    const accuracy = Math.floor(NumWPM * 100 / WPM);\n    dispatch({\n      type: \"5MIN\",\n      payload: {\n        allchar,\n        WPM\n      }\n    });\n  }\n  function runtr() {\n    setAllchar(0);\n    setGltchar(0);\n    let id = setInterval(() => {\n      setSeconds(seconds => seconds + 1);\n    }, 1000);\n    setTimes(id);\n  }\n  const handleTextChange = () => {\n    if (level === \"plainText\") {\n      const randomValue = Math.floor(Math.random() * plainText.length);\n      setPresenttchar(plainText[randomValue][0]);\n      dispatch({\n        type: \"CHANGE\",\n        payload: plainText[randomValue]\n      });\n    }\n  };\n  const handleInput = e => {\n    const value = e.target.value;\n    setInputtypes(value);\n    if (seconds === 0 && !times) {\n      let id = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n      setTimes(id);\n    }\n    let test = \"\";\n    for (let i = 0; i < value.length; i++) {\n      test = test + presentText[i];\n      if (value[i] === presentText[i] && curc[i] === undefined) {\n        curc[i] = true;\n        setCurc({\n          ...curc\n        });\n      } else if (curc[i] === undefined) {\n        curc[i] = false;\n        setCurc({\n          ...curc\n        });\n      }\n    }\n    if (value.length > inputtypes.length) {\n      setAll(pre => pre + 1);\n      setAllchar(allchar + 1);\n    }\n\n    //  word per min\n    if (!runt) {\n      setRunt(Date.now());\n    }\n    if (test !== value) {\n      setGltchars(gltchars + 1);\n      setGltchar(gltchar + 1);\n    } else {\n      if (value[value.length - 1] === presentText[value.length - 1]) {\n        setPresenttchar(presentText[value.length]);\n      }\n    }\n    if (test === value && value.length === presentText.length) {\n      const match = (Date.now() - runt) / 1000;\n      const WPM = Math.round(all / 5 / (match / 60));\n      const NumWPM = Math.round((all - gltchars) / 5 / (match / 60));\n      const accuracy = Math.floor(NumWPM * 100 / WPM);\n      setInputtypes(\"\");\n      setRunt(null);\n      setAll(1);\n      setCurc({});\n      setGltchars(0);\n      dispatch({\n        type: \"SHOW\",\n        payload: {\n          wpm: WPM,\n          accuracy: accuracy\n        }\n      });\n      handleTextChange();\n    }\n  };\n  useEffect(() => {\n    handleTextChange();\n  }, []);\n  const minutes = Math.floor(seconds / 60);\n  const secondss = seconds % 60;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginRight: \"2%\",\n        width: \"90px\",\n        height: \"90px\",\n        background: \"blue\"\n      },\n      children: \"Bigrams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginRight: \"2%\",\n        width: \"90px\",\n        height: \"90px\",\n        background: \"blue\"\n      },\n      children: \"Trigrams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginRight: \"2%\",\n        width: \"90px\",\n        height: \"90px\",\n        background: \"blue\"\n      },\n      children: \"Tetragrams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginRight: \"2%\",\n        width: \"90px\",\n        height: \"90px\",\n        background: \"blue\",\n        borderRadius: \"50%\"\n      },\n      children: \"Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      gap: \"20px\",\n      marginTop: \"20px\",\n      marginBottom: \"30px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: \"30px\"\n          },\n          children: \"Enter Key -\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            width: 120,\n            color: \"white\",\n            marginLeft: \"20px\",\n            backgroundColor: \"teal\",\n            fontSize: '25px',\n            height: 40\n          },\n          children: presenttchar === \" \" ? \"Space\" : presenttchar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          fontSize: \"20px\"\n        },\n        children: [\"Minutes: \", minutes, \" Seconds: \", secondss, seconds === 0 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          sx: {\n            marginLeft: \"10px\",\n            color: \"white\",\n            backgroundColor: \"teal\"\n          },\n          onClick: runtr,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"Start Typing........\",\n      sx: {\n        width: {\n          sm: 100,\n          md: 500\n        },\n        marginTop: \"12px\",\n        \"& .MuiInputBase-root\": {\n          height: 70,\n          borderRadius: \"10px\",\n          boxShadow: \"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px\"\n        }\n      },\n      inputProps: {\n        style: {\n          fontSize: 30\n        }\n      },\n      value: inputtypes,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(Compare, \"jIODIOeJkBxo8UIyNyhijXBOW2Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Compare;\nexport default Compare;\nvar _c;\n$RefreshReg$(_c, \"Compare\");","map":{"version":3,"names":["Box","Button","TextField","Typography","React","useEffect","useState","useDispatch","useSelector","jsxDEV","_jsxDEV","plainText","Compare","_s","presentText","store","AppReducer","inputtypes","setInputtypes","presenttchar","setPresenttchar","runt","setRunt","all","setAll","gltchars","setGltchars","curc","setCurc","seconds","setSeconds","times","setTimes","allchar","setAllchar","gltchar","setGltchar","level","setLevel","dispatch","clearInterval","console","log","match","Date","now","WPM","Math","round","NumWPM","accuracy","floor","type","payload","runtr","id","setInterval","handleTextChange","randomValue","random","length","handleInput","e","value","target","test","i","undefined","pre","wpm","minutes","secondss","children","style","marginRight","width","height","background","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","display","justifyContent","alignItems","gap","marginTop","marginBottom","sx","fontSize","variant","color","marginLeft","backgroundColor","onClick","placeholder","sm","md","boxShadow","inputProps","onChange","_c","$RefreshReg$"],"sources":["E:/chaabi project/chaabi assignment/my-app/src/Components/Compare.jsx"],"sourcesContent":["import { Box, Button, TextField, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst plainText = [\n  \"aada aa aa aa\",\n  \"sds sklj;s ss ss\",\n  \"dd dd dd dd\",\n  \"ll ll ll ll\",\n  \"asdf l;l;\",\n  \"ls dj al dl\",\n  \"as as as as\",\n  \"dss dss dss fdss\",\n  \"df df df df\",\n  \"ff f;f jfjf ff\",\n  \"gg gg gg gg\",\n  \"asdj ;lgf\",\n  \"sdja hl;g\",\n  \"djsa lg;h\",\n  \"hh hsdah hh hh\",\n  \"jj jj jj jj\",\n  \"kkkk gghkk kk\",\n  \"gh gh gh gh\",\n  \"jk jk jk jk\",\n  \"l; l; l; l;\",\n  \"sa df gj lk\",\n  \"dj aasdfl sk ;l\",\n  \"as df gj kl\",\n  \"sd jg la ;k\",\n  \"djsa fghl\",\n  \"sadj hgfl\",\n  \"jdassdl;gh\",\n  \"adsjjhj ;flg\",\n  \"sjaddssglh;\",\n  \"js;lhg\",\n  \"das das das das\",\n  \"jala alala lalala\",\n  \n];\nconst Compare = () => {\n  const presentText = useSelector((store) => store.AppReducer.presentText);\n\n  const [inputtypes, setInputtypes] = useState(\"\");\n  const [presenttchar, setPresenttchar] = useState(presentText[0]);\n  const [runt, setRunt] = useState(null);\n  const [all, setAll] = useState(1);\n  const [gltchars, setGltchars] = useState(0);\n  const [curc, setCurc] = useState({});\n  const [seconds, setSeconds] = useState(0);\n  const [times, setTimes] = useState(null);\n  const [allchar, setAllchar] = useState(0);\n  const [gltchar, setGltchar] = useState(0);\n  const [level, setLevel] = useState(\"plainText\");\n\n  const dispatch = useDispatch();\n\n  if (seconds % 300 === 0 && seconds !== 0 && times) {\n    clearInterval(times);\n    setSeconds(0);\n    console.log(\"ll\");\n    const match = (Date.now() - runt) / 1000;\n    const WPM = Math.round(allchar / 5 / (match / 60));\n    const NumWPM = Math.round(\n      (allchar - gltchar) / 5 / (match / 60)\n    );\n    const accuracy = Math.floor((NumWPM * 100) / WPM);\n    dispatch({ type: \"5MIN\", payload: { allchar, WPM } });\n  }\n\n  function runtr() {\n    setAllchar(0);\n    setGltchar(0);\n    let id = setInterval(() => {\n      setSeconds((seconds) => seconds + 1);\n    }, 1000);\n    setTimes(id);\n  }\n\n  const handleTextChange = () => {\n    if (level === \"plainText\") {\n      const randomValue = Math.floor(Math.random() * plainText.length);\n\n      setPresenttchar(plainText[randomValue][0]);\n\n      dispatch({ type: \"CHANGE\", payload: plainText[randomValue] });\n    }\n  };\n\n  const handleInput = (e) => {\n    const value = e.target.value;\n    setInputtypes(value);\n    if (seconds === 0 && !times) {\n      let id = setInterval(() => {\n        setSeconds((seconds) => seconds + 1);\n      }, 1000);\n      setTimes(id);\n    }\n\n    let test = \"\";\n    for (let i = 0; i < value.length; i++) {\n      test = test + presentText[i];\n      if (value[i] === presentText[i] && curc[i] === undefined) {\n        curc[i] = true;\n        setCurc({ ...curc });\n      } else if (curc[i] === undefined) {\n        curc[i] = false;\n        setCurc({ ...curc });\n      }\n    }\n\n     if (value.length > inputtypes.length) {\n      setAll((pre) => pre + 1);\n      setAllchar(allchar + 1);\n    }\n\n    //  word per min\n    if (!runt) {\n      setRunt(Date.now());\n    }\n\n    if (test !== value) {\n      setGltchars(gltchars + 1);\n      setGltchar(gltchar + 1);\n    } else {\n      if (value[value.length - 1] === presentText[value.length - 1]) {\n        setPresenttchar(presentText[value.length]);\n      }\n    }\n\n    if (test === value && value.length === presentText.length) {\n      const match = (Date.now() - runt) / 1000;\n      const WPM = Math.round(all / 5 / (match / 60));\n      const NumWPM = Math.round((all - gltchars) / 5 / (match / 60));\n\n      const accuracy = Math.floor((NumWPM * 100) / WPM);\n\n      setInputtypes(\"\");\n      setRunt(null);\n      setAll(1);\n      setCurc({});\n      setGltchars(0);\n      dispatch({ type: \"SHOW\", payload: { wpm: WPM, accuracy: accuracy } });\n      handleTextChange();\n    }\n  };\n\n  useEffect(() => {\n    handleTextChange();\n  }, []);\n\n  const minutes = Math.floor(seconds / 60);\n  const secondss = seconds % 60;\n\n  return (\n    <div>\n            <button style={{marginRight: \"2%\",width:\"90px\", height:\"90px\",  background: \"blue\"}}>Bigrams</button>\n            <button style={{marginRight: \"2%\",width:\"90px\", height:\"90px\",  background: \"blue\"}}>Trigrams</button>\n            <button style={{marginRight: \"2%\",width:\"90px\", height:\"90px\",  background: \"blue\"}}>Tetragrams</button>\n            <button style={{marginRight: \"2%\",width:\"90px\", height:\"90px\",  background: \"blue\", borderRadius:\"50%\"}}>Words</button>\n              {/* <div class=\"form-group\">\n                    <label class=\"col-form-label col-form-label-sm\"> &nbsp; </label>\n                    <div class=\"custom-control custom-radio\">\n                        <input\n                            type=\"radio\"\n                            class=\"custom-control-input\"\n                            id=\"bi-grams\"\n                            name=\"source-radio-group\"\n                            value=\"bigrams\"\n                            v-model=\"data.source\"\n                       />\n                       \n                        <label class=\"custom-control-label\" for=\"bi-grams\">Bigrams</label>\n                        <input\n                            type=\"radio\"\n                            class=\"custom-control-input\"\n                            id=\"tri-grams\"\n                            name=\"source-radio-group\"\n                            value=\"trigrams\"\n                            v-model=\"data.source\"\n                        />\n                        <label class=\"custom-control-label\" for=\"tri-grams\">Trigrams</label>\n                    </div>\n                    <div class=\"custom-control custom-radio\">\n                        <input\n                            type=\"radio\"\n                            class=\"custom-control-input\"\n                            id=\"tetra-grams\"\n                            name=\"source-radio-group\"\n                            value=\"tetragrams\"\n                            v-model=\"data.source\"\n                        />\n                        <label class=\"custom-control-label\" for=\"tetra-grams\">Tetragrams</label>\n                        <input\n                            type=\"radio\"\n                            class=\"custom-control-input\"\n                            id=\"words\"\n                            name=\"source-radio-group\"\n                            value=\"words\"\n                            v-model=\"data.source\"\n                        />\n                        <label class=\"custom-control-label\" for=\"words\">Words</label>\n                    </div>\n                    <div class=\"custom-control custom-radio\">\n                       \n                    </div>\n                    <div class=\"custom-control custom-radio\">\n                        <input\n                            type=\"radio\"\n                            class=\"custom-control-input\"\n                            id=\"custom_words\"\n                            name=\"source-radio-group\"\n                            value=\"custom_words\"\n                            v-model=\"data.source\"\n                        />\n                        <label class=\"custom-control-label\" for=\"custom_words\">\n                        <a\n                            href=\"#\"\n                            data-toggle=\"modal\"\n                            data-target=\"#custom-words-modal\"\n                            click=\"customWordsModalShow\"\n                        >\n                            Custom\n                        </a>\n                        </label>\n                    </div>\n              </div> */}\n\n\n      <Box\n        display={\"flex\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n        gap={\"20px\"}\n        marginTop={\"20px\"}\n        marginBottom={\"30px\"}\n      >\n        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Typography sx={{ fontSize: \"30px\" }}>Enter Key -</Typography>\n          <Button\n            variant=\"outlined\"\n            \n            sx={{\n              width: 120,\n              color: \"white\",\n              marginLeft: \"20px\",\n              backgroundColor: \"teal\",\n              fontSize:'25px',\n              height:40\n            }}\n          >\n            {presenttchar === \" \" ? \"Space\" : presenttchar}\n          </Button>\n        </Box>\n        <Box\n          sx={{\n            fontSize: \"20px\",\n          }}\n        >\n          Minutes: {minutes} Seconds: {secondss}\n          {seconds === 0 && (\n            <Button\n              variant=\"outlined\"\n              sx={{\n                marginLeft: \"10px\",\n                color: \"white\",\n                backgroundColor: \"teal\",\n              }}\n              onClick={runtr}\n            >\n              Start\n            </Button>\n          )}\n        </Box>\n      </Box>\n      <TextField\n        placeholder=\"Start Typing........\"\n        sx={{\n          width: { sm: 100, md: 500 },\n          marginTop: \"12px\",\n          \"& .MuiInputBase-root\": {\n            height: 70,\n            borderRadius: \"10px\",\n\n            boxShadow:\n              \"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px\",\n          },\n        }}\n        inputProps={{ style: { fontSize: 30 } }}\n        value={inputtypes}\n        onChange={handleInput}\n      />\n    </div>\n  );\n};\n\nexport default Compare;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}